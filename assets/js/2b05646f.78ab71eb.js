"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[5994],{16723:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>d,metadata:()=>o,toc:()=>u});var r=t(85893),s=t(11151);const d={id:"debugger-surf5",title:"Surf 5 Debugger",date:new Date("2023-11-14T00:00:00.000Z"),keywords:["iMCU","ethernet","w7500"],description:"How to debug Surf 5"},i=void 0,o={id:"Product/Open-Source-Hardware/surf5/getting-started/debugger-surf5",title:"Surf 5 Debugger",description:"How to debug Surf 5",source:"@site/docs/Product/Open-Source-Hardware/surf5/getting-started/debugger-surf5.md",sourceDirName:"Product/Open-Source-Hardware/surf5/getting-started",slug:"/Product/Open-Source-Hardware/surf5/getting-started/debugger-surf5",permalink:"/Product/Open-Source-Hardware/surf5/getting-started/debugger-surf5",draft:!1,unlisted:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/Open-Source-Hardware/surf5/getting-started/debugger-surf5.md",tags:[],version:"current",frontMatter:{id:"debugger-surf5",title:"Surf 5 Debugger",date:"2023-11-14T00:00:00.000Z",keywords:["iMCU","ethernet","w7500"],description:"How to debug Surf 5"},sidebar:"docs",previous:{title:"How to make Surf 5 Projects",permalink:"/Product/Open-Source-Hardware/surf5/getting-started/fw-examples"},next:{title:"RP2040 Based",permalink:"/Product/Open-Source-Hardware/rp2040_based"}},c={},u=[{value:"How to debug Surf5 in VSCODE",id:"how-to-debug-surf5-in-vscode",level:2}];function a(e){const n={h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"how-to-debug-surf5-in-vscode",children:"How to debug Surf5 in VSCODE"}),"\n",(0,r.jsx)(n.p,{children:"This guide is based on Surf5's default example, Loopback"}),"\n",(0,r.jsx)(n.p,{children:"@@ -23,36 +19,38 @@"}),"\n",(0,r.jsx)(n.h1,{id:"3-check-debugger-connection",children:"3. Check Debugger connection."}),"\n",(0,r.jsx)("img",{src:"/img/osh/surf5/pyocd_list.png",width:"400"}),"\n",(0,r.jsxs)(n.p,{children:["You can check PC and Debugger connection using ",(0,r.jsx)(n.strong,{children:"pyocd list"})," command"]}),"\n",(0,r.jsx)(n.h1,{id:"4-add-w7500-in-pyocd-cmsis-pack",children:"4. Add W7500 in pyocd CMSIS-PACK"}),"\n",(0,r.jsx)("img",{src:"/img/osh/surf5/Add_DFP1.png",width:"400"}),"\n",(0,r.jsxs)(n.p,{children:["Make Directory named ",(0,r.jsx)(n.strong,{children:"WIZnet.W7500_DFP.1.0.0"})," in ",(0,r.jsx)(n.strong,{children:"W7500X-SURF5/tools"})]}),"\n",(0,r.jsx)("img",{src:"/img/osh/surf5/Add_DFP2.png",width:"400"}),"\n",(0,r.jsxs)(n.p,{children:["Make Directory named ",(0,r.jsx)(n.strong,{children:"Flash"})," in ",(0,r.jsx)(n.strong,{children:"W7500X-SURF5/tools/WIZnet.W7500_DFP.1.0.0"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:"/img/osh/surf5/Add_DFP3.png",width:"400"}),"Download the W7500 Flash ",(0,r.jsx)("a",{href:"/img/products/w7500/overview/w7500_128_flm.zip",target:"_blank",children:"file"})," and copy in ",(0,r.jsx)(n.strong,{children:"W7500X-SURF5/tools/WIZnet.W7500_DFP.1.0.0/Flash"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:"/img/osh/surf5/Add_DFP4.png",width:"400"}),"Download the WIZnet.W7500_DFP.pdsc",(0,r.jsx)("a",{href:"/img/osh/surf5/WIZnet.W7500_DFP.zip",target:"_blank",children:"file"}),"and copy in ",(0,r.jsx)(n.strong,{children:"W7500X-SURF5/tools/WIZnet.W7500_DFP.1.0.0"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:"/img/osh/surf5/Add_DFP5.png",width:"600"}),"The WIZnet.W7500_DFP.pdsc file is an XML file that sets the device name and Core, Clock, and Memory areas."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:"/img/osh/surf5/Add_DFP6.png",width:"400"}),"Now you can see the W7500 added with the ",(0,r.jsx)(n.strong,{children:"pyocd list --targets"})," command."]}),"\n",(0,r.jsx)(n.h1,{id:"5-set-gdb-path-and-excutableelf-path",children:"5. Set GDB path and Excutable(.elf) path"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("a",{href:"/img/osh/surf5/launch.zip",target:"_blank",children:"Download"})," launch.jason and edit executable path and gdbpath"]}),"\n",(0,r.jsx)("img",{src:"/img/osh/surf5/Set_GDB_Path.png",width:"600"}),"\n",(0,r.jsx)(n.p,{children:"Set the executable path to the path of the .elf file you want to debug and the GDB path to the path of the ARM TOOL CHAIN you installed."}),"\n",(0,r.jsx)(n.h1,{id:"6-install-cortex-debug-extension",children:"6. Install Cortex-Debug Extension"}),"\n",(0,r.jsx)("img",{src:"/img/osh/surf5/Debug.png",width:"400"}),"\n",(0,r.jsx)(n.p,{children:"Install Cortex-Debug Extension in VSCODE"}),"\n",(0,r.jsx)(n.h1,{id:"7-run-debug",children:"7. Run Debug"}),"\n",(0,r.jsx)("img",{src:"/img/osh/surf5/Debug1.png",width:"400"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["You can click ",(0,r.jsx)(n.strong,{children:"Run and Debug"})," to enter debug mode."]}),"\n",(0,r.jsx)("img",{src:"/img/osh/surf5/Debug2.png",width:"400"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"By clicking the play icon you can run the debug in debug mode."}),"\n",(0,r.jsx)("img",{src:"/img/osh/surf5/Debug3.png",width:"400"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{})]})}function g(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>i});var r=t(67294);const s={},d=r.createContext(s);function i(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);