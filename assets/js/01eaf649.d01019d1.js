"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[58253],{24732:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Product/Chip/MCU/W7500/Peripherals-internal/exti","title":"External Interrupt (EXTI)","description":"Introduction","source":"@site/docs/Product/Chip/MCU/W7500/Peripherals-internal/exti.md","sourceDirName":"Product/Chip/MCU/W7500/Peripherals-internal","slug":"/Product/Chip/MCU/W7500/Peripherals-internal/exti","permalink":"/Product/Chip/MCU/W7500/Peripherals-internal/exti","draft":false,"unlisted":false,"editUrl":"https://github.com/Wiznet/document_framework/tree/master/docs/Product/Chip/MCU/W7500/Peripherals-internal/exti.md","tags":[],"version":"current","frontMatter":{"id":"exti","title":"External Interrupt (EXTI)","date":"2020-06-10T00:00:00.000Z"}}');var i=t(74848),l=t(28453);const a={id:"exti",title:"External Interrupt (EXTI)",date:new Date("2020-06-10T00:00:00.000Z")},s=void 0,o={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Features",id:"features",level:2},{value:"Functional description",id:"functional-description",level:2},{value:"Peripheral_Examples",id:"peripheral_examples",level:2}];function d(e){const n={a:"a",br:"br",h2:"h2",hr:"hr",img:"img",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"Each functional pads are connected to the external interrupt(EXTINT) source."}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All functional pads can be used as an external interrupt source regardless of any set of pad function."}),"\n",(0,i.jsx)(n.li,{children:"External Interrupt controller has the following functions and can be controlled by registers."}),"\n",(0,i.jsx)(n.li,{children:"Interrupt mask (enable or disable, default : disable)"}),"\n",(0,i.jsx)(n.li,{children:"Interrupt polarity (rising or falling, default : rising)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"functional-description",children:"Functional description"}),"\n",(0,i.jsxs)(n.p,{children:["All pads are connected to the control register individually. (External interrupt mask register and External Interrupt polarity register)",(0,i.jsx)(n.br,{}),"\n","External interrupt working as following expression:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each pad interrupt = Interrupt mask & (Interrupt polarity ^ Pad input)"}),"\n",(0,i.jsx)(n.li,{children:"EXTINT = any Each pad interrupt"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(49260).A+"",title:"Figure1 External Interrupt diagram",width:"954",height:"1219"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"peripheral_examples",children:"Peripheral_Examples"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/Product/Chip/MCU/W7500/Peripherals-internal/led-toggle",children:"EXTI LED-Toggle example"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/Product/Chip/MCU/W7500/Peripherals-internal/sleep",children:"EXTI Sleep example"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},49260:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/external_interrupt_diagram-a01994956a013446fc4ee1bea6e9359b.jpg"},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var r=t(96540);const i={},l=r.createContext(i);function a(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);