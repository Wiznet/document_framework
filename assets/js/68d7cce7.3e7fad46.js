"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[2664],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>s});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var u=r.createContext({}),p=function(t){var e=r.useContext(u),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=p(t.components);return r.createElement(u.Provider,{value:e},t.children)},d="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,u=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),d=p(a),k=n,s=d["".concat(u,".").concat(k)]||d[k]||c[k]||l;return a?r.createElement(s,i(i({ref:e},m),{},{components:a})):r.createElement(s,i({ref:e},m))}));function s(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o[d]="string"==typeof t?t:n,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},94620:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=a(87462),n=(a(67294),a(3905));const l={id:"surf5",title:"Surf5",date:new Date("2023-10-11T00:00:00.000Z"),keywords:["iMCU","ethernet","w7500P"],description:"Surf5 is evaluation board for W7500P"},i=void 0,o={unversionedId:"Product/Open-Source-Hardware/surf5/surf5",id:"Product/Open-Source-Hardware/surf5/surf5",title:"Surf5",description:"Surf5 is evaluation board for W7500P",source:"@site/docs/Product/Open-Source-Hardware/surf5/surf5.md",sourceDirName:"Product/Open-Source-Hardware/surf5",slug:"/Product/Open-Source-Hardware/surf5/",permalink:"/Product/Open-Source-Hardware/surf5/",draft:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/Open-Source-Hardware/surf5/surf5.md",tags:[],version:"current",frontMatter:{id:"surf5",title:"Surf5",date:"2023-10-11T00:00:00.000Z",keywords:["iMCU","ethernet","w7500P"],description:"Surf5 is evaluation board for W7500P"},sidebar:"docs",previous:{title:"W7500 Based",permalink:"/Product/Open-Source-Hardware/surf5/w7500-based"},next:{title:"Getting Started",permalink:"/Product/Open-Source-Hardware/surf5/getting-started"}},u={},p=[{value:"Overview",id:"overview",level:2},{value:"Revision history",id:"revision-history",level:2},{value:"Features",id:"features",level:2},{value:"Hardware Specification",id:"hardware-specification",level:2},{value:"Pin-out v1.0",id:"pin-out-v10",level:3},{value:"Operation Condition",id:"operation-condition",level:3},{value:"Technical Reference",id:"technical-reference",level:2},{value:"W7500P",id:"w7500p",level:3},{value:"Schematic v1.0",id:"schematic-v10",level:3},{value:"Schematic &amp; Part list &amp; Gerber File",id:"schematic--part-list--gerber-file",level:3},{value:"Firmware Example",id:"firmware-example",level:3},{value:"Dimension v1.0 (Unit : mm)",id:"dimension-v10-unit--mm",level:3},{value:"How to buy",id:"how-to-buy",level:2}],m={toc:p},d="wrapper";function c(t){let{components:e,...l}=t;return(0,n.kt)(d,(0,r.Z)({},m,l,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Surf5 is a microcontroller evaluation board based on the W7500P."),(0,n.kt)("a",{target:"_blank",href:a(6172).Z},(0,n.kt)("img",{src:a(6172).Z,alt:"Surf5"})),(0,n.kt)("h2",{id:"revision-history"},"Revision history"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Date"),(0,n.kt)("th",{parentName:"tr",align:null},"Version"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Oct 2023"),(0,n.kt)("td",{parentName:"tr",align:null},"1.0"),(0,n.kt)("td",{parentName:"tr",align:null},"Initial board release")))),(0,n.kt)("h2",{id:"features"},"Features"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"W7500P microcontroller",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"ARM Cortex-M0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"48MHz maximum frequency"))),(0,n.kt)("li",{parentName:"ul"},"Hardwired TCP/IP Core",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"8 Sockets"),(0,n.kt)("li",{parentName:"ul"},"SRAM for socket: 32 KB"))),(0,n.kt)("li",{parentName:"ul"},"PHY",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"IC+(IP101G)"))),(0,n.kt)("li",{parentName:"ul"},"Memories",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Flash: 128 KB"),(0,n.kt)("li",{parentName:"ul"},"SRAM: 16KB"),(0,n.kt)("li",{parentName:"ul"},"ROM for boot code: 6 KB"))),(0,n.kt)("li",{parentName:"ul"},"Clock, reset and supply management",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"POR (Power-On Reset)"),(0,n.kt)("li",{parentName:"ul"},"Internal Voltage Regulator : 3.3V to 1.5V"),(0,n.kt)("li",{parentName:"ul"},"8-to-24MHz external crystal oscillator"),(0,n.kt)("li",{parentName:"ul"},"Internal 8MHz RC Oscillator"),(0,n.kt)("li",{parentName:"ul"},"PLL for CPU clock"))),(0,n.kt)("li",{parentName:"ul"},"ADC : 12bit, 8ch, 1Msps"),(0,n.kt)("li",{parentName:"ul"},"DMA",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"6-channel DMA controller"),(0,n.kt)("li",{parentName:"ul"},"Peripheral supported: UARTs, SPIs"))),(0,n.kt)("li",{parentName:"ul"},"GPIO",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"34 I/Os (15 IO x 2ea, 4 IO x 1ea)"))),(0,n.kt)("li",{parentName:"ul"},"Debug mode",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Serial Wire Debug (SWD)"))),(0,n.kt)("li",{parentName:"ul"},"Timer/PWM",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"1 Watchdog (32-bit down-counter)"),(0,n.kt)("li",{parentName:"ul"},"4 Timers (32-bit or 16-bit down-counter)"),(0,n.kt)("li",{parentName:"ul"},"8 PWMs (32-bit counter/timers with programmable 6-bit prescaler)"))),(0,n.kt)("li",{parentName:"ul"},"Communication Interfaces",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"3 UART (2 UARTs with FIFO and Flow Control, 1 simple UART)"),(0,n.kt)("li",{parentName:"ul"},"2 SPI"),(0,n.kt)("li",{parentName:"ul"},"2 I2C (Master/Slave, Fast-mode (400 kbps))"))),(0,n.kt)("li",{parentName:"ul"},"Crypto",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"1 RNG (Random Number Generator): 32-bit random number"))),(0,n.kt)("li",{parentName:"ul"},"Package",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"64 LQFP (7x7 mm)"))))),(0,n.kt)("li",{parentName:"ul"},"Built-in RJ45"),(0,n.kt)("li",{parentName:"ul"},"Built-in LDO"),(0,n.kt)("li",{parentName:"ul"},"Built-in UART to USB ")),(0,n.kt)("h2",{id:"hardware-specification"},"Hardware Specification"),(0,n.kt)("h3",{id:"pin-out-v10"},"Pin-out v1.0"),(0,n.kt)("a",{target:"_blank",href:a(46586).Z},(0,n.kt)("img",{src:a(46586).Z,alt:"Surf5_PINOUT"})),(0,n.kt)("p",null,"The pins below are fixed functions in surf5"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"I/O"),(0,n.kt)("th",{parentName:"tr",align:null},"Pin Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"O"),(0,n.kt)("td",{parentName:"tr",align:null},"PC_15"),(0,n.kt)("td",{parentName:"tr",align:null},"Connected to user LED")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"O"),(0,n.kt)("td",{parentName:"tr",align:null},"PC_10"),(0,n.kt)("td",{parentName:"tr",align:null},"UART2_TX connected USB to Serial IC")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"I"),(0,n.kt)("td",{parentName:"tr",align:null},"PC_11"),(0,n.kt)("td",{parentName:"tr",align:null},"UART2_RX connected USB to Serial IC")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"O"),(0,n.kt)("td",{parentName:"tr",align:null},"PA_03"),(0,n.kt)("td",{parentName:"tr",align:null},"SWCLK connected J3")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"IO"),(0,n.kt)("td",{parentName:"tr",align:null},"PA_04"),(0,n.kt)("td",{parentName:"tr",align:null},"SWDIO connected J3")))),(0,n.kt)("p",null,"Apart from GPIO and ground pins, there are 5 other pins on the main 40-pin interface:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Pin No."),(0,n.kt)("th",{parentName:"tr",align:null},"Pin Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"PIN40"),(0,n.kt)("td",{parentName:"tr",align:null},"VBUS"),(0,n.kt)("td",{parentName:"tr",align:null},"Micro-USB input voltage, connected to micro-USB port pin 1. Nominally 5V.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"PIN39"),(0,n.kt)("td",{parentName:"tr",align:null},"VSYS"),(0,n.kt)("td",{parentName:"tr",align:null},"Main system input voltage, which can vary in the allowed range 4.3V to 5.5V, and is used by the on-board LDO to generate the 3.3V .")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"PIN37"),(0,n.kt)("td",{parentName:"tr",align:null},"3V3_EN"),(0,n.kt)("td",{parentName:"tr",align:null},"Connects to the on-board LDO enable pin. To disable the 3.3V (which also de-power Surf5), short this pin low.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"PIN36"),(0,n.kt)("td",{parentName:"tr",align:null},"3V3"),(0,n.kt)("td",{parentName:"tr",align:null},"Main 3.3V supply to RP2040  and W5100S, generated by the on-board LDO.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"PIN30"),(0,n.kt)("td",{parentName:"tr",align:null},"RUN"),(0,n.kt)("td",{parentName:"tr",align:null},"Reset pin, To reset W7500P, short this pin low.")))),(0,n.kt)("h3",{id:"operation-condition"},"Operation Condition"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Item"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Operation Temperature MAX"),(0,n.kt)("td",{parentName:"tr",align:null},"70C (including self-heating)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Operation Temperature MIN"),(0,n.kt)("td",{parentName:"tr",align:null},"0C")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"VBUS"),(0,n.kt)("td",{parentName:"tr",align:null},"DC 5V (+/- 10%)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"VSYS Min"),(0,n.kt)("td",{parentName:"tr",align:null},"DC 4.3V")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"VSYS Max"),(0,n.kt)("td",{parentName:"tr",align:null},"DC 5.5V")))),(0,n.kt)("p",null,"Recommended maximum ambient temperature of operation is 50C."),(0,n.kt)("h2",{id:"technical-reference"},"Technical Reference"),(0,n.kt)("h3",{id:"w7500p"},"W7500P"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/Product/iMCU/W7500P/documents"},"datasheet"))),(0,n.kt)("h3",{id:"schematic-v10"},"Schematic v1.0"),(0,n.kt)("a",{target:"_blank",href:a(17452).Z},(0,n.kt)("img",{src:a(17452).Z,alt:"Surf5_Schematic"})),(0,n.kt)("h3",{id:"schematic--part-list--gerber-file"},"Schematic & Part list & Gerber File"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Wiznet/Hardware-Files-of-WIZnet/tree/master/01_iMCU/W7500P/Surf5/Schematic"},"Go to Github"))),(0,n.kt)("h3",{id:"firmware-example"},"Firmware Example"),(0,n.kt)("p",null,"Coming soon"),(0,n.kt)("h3",{id:"dimension-v10-unit--mm"},"Dimension v1.0 (Unit : mm)"),(0,n.kt)("a",{target:"_blank",href:a(61871).Z},(0,n.kt)("img",{src:a(61871).Z,alt:"Surf5_Dimension"})),(0,n.kt)("h2",{id:"how-to-buy"},"How to buy"),(0,n.kt)("p",null,"Coming soon"))}c.isMDXComponent=!0},61871:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/Dimension-41555584326ac0ec99ea04a3d6b0eae5.png"},46586:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/Surf5_1.0_Pinout-3c43fd406eaebd911c18757a3a4a1af3.png"},17452:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/Surf5_1.0_Schematic-ce9101ecd1b097a03635fedc4a180c64.png"},6172:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/surf5_R100_img-9637b49ffa3a7a0c1108418a6dfdfa15.png"}}]);