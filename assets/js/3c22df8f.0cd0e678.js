"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[56861],{59644:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Product/iMCU/W7500/Peripherals-internal/flowcontrol","title":"UART Hardware Control example","description":"(C) COPYRIGHT 2015 WIZnet Co.,Ltd.","source":"@site/docs/Product/iMCU/W7500/Peripherals-internal/flowcontrol.md","sourceDirName":"Product/iMCU/W7500/Peripherals-internal","slug":"/Product/iMCU/W7500/Peripherals-internal/flowcontrol","permalink":"/Product/iMCU/W7500/Peripherals-internal/flowcontrol","draft":false,"unlisted":false,"editUrl":"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/Peripherals-internal/flowcontrol.md","tags":[],"version":"current","frontMatter":{"id":"flowcontrol","title":"UART Hardware Control example","date":"2020-06-10T00:00:00.000Z"},"sidebar":"docs","previous":{"title":"Embedded Flash memory","permalink":"/Product/iMCU/W7500/Peripherals-internal/flash"},"next":{"title":"General Purpose Input/Outputs (GPIO)","permalink":"/Product/iMCU/W7500/Peripherals-internal/gpio"}}');var l=r(74848),i=r(28453);const o={id:"flowcontrol",title:"UART Hardware Control example",date:new Date("2020-06-10T00:00:00.000Z")},s=void 0,a={},d=[{value:"Example Description",id:"example-description",level:3},{value:"Directory contents",id:"directory-contents",level:3},{value:"Hardware and Software environment",id:"hardware-and-software-environment",level:3},{value:"How to use it ?",id:"how-to-use-it-",level:3}];function c(e){const n={code:"code",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:"(C) COPYRIGHT 2015 WIZnet Co.,Ltd."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"file    : UART/Uart_HardwareFlowControl/readme.md"}),"\n",(0,l.jsx)(n.li,{children:"author  : IOP Team"}),"\n",(0,l.jsx)(n.li,{children:"version : V1.0.0"}),"\n",(0,l.jsx)(n.li,{children:"date    : 1-May-2015"}),"\n",(0,l.jsx)(n.li,{children:"brief   : Description of the Uart HardwareFlowControl example."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:"THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, WIZNET SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"example-description",children:"Example Description"}),"\n",(0,l.jsx)(n.p,{children:"This example provides a description of how to use the UART with hardware flow\ncontrol and communicate with another UART.(UART0 and UART1 connect)\nFirst, the UART2 send the debug data to the hyperterminal.\nThe receive buffer have a RxBufferSize bytes as maximum."}),"\n",(0,l.jsx)(n.p,{children:"The UART0/UART1 is configured as follow:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"BaudRate = 115200 baud"}),"\n",(0,l.jsx)(n.li,{children:"Word Length = 8 Bits"}),"\n",(0,l.jsx)(n.li,{children:"One Stop Bit"}),"\n",(0,l.jsx)(n.li,{children:"No parity"}),"\n",(0,l.jsx)(n.li,{children:"Hardware flow control enabled (RTS and CTS signals)"}),"\n",(0,l.jsx)(n.li,{children:"Receive and transmit enable"}),"\n",(0,l.jsx)(n.li,{children:"Enable FIFOs(FEN of UART_LCR-H)"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"This example describes that the data send from UART0 to UART1.\nThe interrupts are generated when the fill level progresses through the\ntrigger level."}),"\n",(0,l.jsx)(n.p,{children:"UART1 Check Point when RX status operate"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"The bit RXFF of UARTFR(6) confirm '1'"}),"\n",(0,l.jsx)(n.li,{children:"The bit BUSY of UARTFR(3) confirm '1'"}),"\n",(0,l.jsx)(n.li,{children:"Send RTS as '1' (RTS of UARTCR(11))and the nUARTRTS pin is LOW."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"directory-contents",children:"Directory contents"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"UART/Uart_HardwareFlowControl/main.c                                            (Main program)"}),"\n",(0,l.jsx)(n.li,{children:"UART/Uart_HardwareFlowControl/W7500x_conf.h                                     (Library Configuration file)"}),"\n",(0,l.jsx)(n.li,{children:"UART/Uart_HardwareFlowControl/W7500x_it.h                                       (Interrupt handlers header file)"}),"\n",(0,l.jsx)(n.li,{children:"UART/Uart_HardwareFlowControl/W7500x_it.c                                       (Interrupt handlers)"}),"\n",(0,l.jsx)(n.li,{children:"UART/Uart_HardwareFlowControl/MDK/W7500x_Uart_HardwareFlowContolTest.uvproj     (Project file)"}),"\n",(0,l.jsx)(n.li,{children:"UART/Uart_HardwareFlowControl/GCC/Makefile                        \t\t\t(GCC Make file)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"hardware-and-software-environment",children:"Hardware and Software environment"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"This example runs on W7500 Connectivity line Devices."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"W7500 Set-up"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"   --------------            --------------\n  |    UART0     |          |    UART1     |\n  |              |          |              |\n  |   (PA_13)TXD |----------|   RXD(PB_03) |\n  |   (PA_14)RXD |----------|   TXD(PB_02) |\n  |   (PA_11)CTS |----------|   RTS(PB_01) |\n  |   (PA_12)RTS |----------|   CTS(PB_00) |\n  |              |          |              |\n  |              |          |              |\n   --------------            --------------\n\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"CTS(PA11) and RTS(PB00) connected."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"RTS(PA12) and CTS(PB01) connected."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"TXD(PA13) and RXD(PB02) connected."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"RXD(PA14) and TXD(PB03) connected."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"how-to-use-it-",children:"How to use it ?"}),"\n",(0,l.jsx)(n.p,{children:"In order to make the program work, you must do the following:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Copy all source files from this example folder to the template folder under\nProject\\Peripheral_Example"}),"\n",(0,l.jsx)(n.li,{children:"Open your preferred toolchain"}),"\n",(0,l.jsx)(n.li,{children:"Rebuild all files and load your image into target memory"}),"\n",(0,l.jsx)(n.li,{children:"Run the example"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:"\xa9 COPYRIGHT 2015 WIZnet Co.,Ltd."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(96540);const l={},i=t.createContext(l);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);