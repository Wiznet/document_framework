"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[9643],{82296:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=t(85893),s=t(11151);const i={id:"system-and-memory",title:"System and Memory",date:new Date("2020-04-03T00:00:00.000Z")},o=void 0,a={id:"Product/iMCU/W7500/system-and-memory",title:"System and Memory",description:"System architecture",source:"@site/docs/Product/iMCU/W7500/System-and-Memory.md",sourceDirName:"Product/iMCU/W7500",slug:"/Product/iMCU/W7500/system-and-memory",permalink:"/Product/iMCU/W7500/system-and-memory",draft:!1,unlisted:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/System-and-Memory.md",tags:[],version:"current",frontMatter:{id:"system-and-memory",title:"System and Memory",date:"2020-04-03T00:00:00.000Z"},sidebar:"docs",previous:{title:"Pin Assignment",permalink:"/Product/iMCU/W7500/pin-assignment"},next:{title:"Interrupt and Event",permalink:"/Product/iMCU/W7500/interrupt-and-event"}},c={},l=[{value:"System architecture",id:"system-architecture",level:2},{value:"Memory organization",id:"memory-organization",level:2},{value:"Memory map",id:"memory-map",level:3},{value:"System Configuration Controller (SYSCFG)",id:"system-configuration-controller-syscfg",level:2}];function d(e){const n={h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"system-architecture",children:"System architecture"}),"\n",(0,r.jsx)(n.p,{children:"Main system consists of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Two masters:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cortex-M0 core"}),"\n",(0,r.jsx)(n.li,{children:"uDMAC(PL230, 6 channels)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Ten slaves","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Internal BOOT ROM"}),"\n",(0,r.jsx)(n.li,{children:"Internal SRAM"}),"\n",(0,r.jsx)(n.li,{children:"Internal Flash Memory"}),"\n",(0,r.jsx)(n.li,{children:"Two AHB2APB bridge which connects all APB peripherals"}),"\n",(0,r.jsx)(n.li,{children:"Four AHB dedicated to 16-bit GPIOs"}),"\n",(0,r.jsx)(n.li,{children:"TCP/IP Hardware core"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"W7500 System Architecture",src:t(58312).Z+"",width:"644",height:"487"})}),"\n",(0,r.jsx)(n.p,{children:"AHB-Lite BUS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This bus connects the two masters (Cortex-M0 and uDMAC) and ten AHB\nslaves."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Two APB BUSs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"These buses connect Seventeen APB peripherals (Watchdog, two dual\ntimers, pwm, two UARTs, simple UART, two SSPs, random number\ngenerator, real time clock, 12bits analog digital converter, clock\ncontroller, IO configuration, PAD MUX controller)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"memory-organization",children:"Memory organization"}),"\n",(0,r.jsx)(n.p,{children:"Program memory, data memory, registers and I/O ports are organized\nwithin the same linear 4-Gbyte address space. The bytes are coded in\nmemory in Little Endian format. The lowest numbered byte in a word is\nconsidered the word\u2019s least significant byte and the highest numbered\nbyte the most significant."}),"\n",(0,r.jsx)(n.h3,{id:"memory-map",children:"Memory map"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"W7500 Memory map",src:t(88096).Z+"",width:"558",height:"832"})}),"\n",(0,r.jsx)(n.h2,{id:"system-configuration-controller-syscfg",children:"System Configuration Controller (SYSCFG)"}),"\n",(0,r.jsx)(n.p,{children:"Main purposes of the system configuration controller are the following"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Control of the memory remap feature"}),"\n",(0,r.jsx)(n.li,{children:"The ability to enable an automatic reset if the system locks up"}),"\n",(0,r.jsx)(n.li,{children:"Information about the cause of the last reset"}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},88096:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/memory_map-c93d02718998671ec158c3f6edc4134a.png"},58312:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/w7500_system_architecture-460810abc914b8992dde77f0345dc203.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var r=t(67294);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);