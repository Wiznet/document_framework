"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[57271],{59227:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en","title":"HW design guide","description":"Introduction","source":"@site/docs/Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en.md","sourceDirName":"Product/ioNIC/W55RP20/W55RP20-S2E","slug":"/Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en","permalink":"/Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en","draft":false,"unlisted":false,"editUrl":"https://github.com/Wiznet/document_framework/tree/master/docs/Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en.md","tags":[],"version":"current","frontMatter":{"id":"hw-design-guide-en","title":"HW design guide","date":"2024-10-04T00:00:00.000Z","keywords":["wiznet","w55rp20","w232n datasheet","hardwired tcp/ip","serial-to-ethernet","w5500","rp2040"]},"sidebar":"docs","previous":{"title":"Getting Started with W55RP20-EVB-PICO","permalink":"/Product/ioNIC/W55RP20/W55RP20-S2E/w55rp20-evb-pico-s2e"},"next":{"title":"Config tool Guide","permalink":"/Product/ioNIC/W55RP20/W55RP20-S2E/Config-tool-Guide-en"}}');var r=i(74848),o=i(28453);const s={id:"hw-design-guide-en",title:"HW design guide",date:new Date("2024-10-04T00:00:00.000Z"),keywords:["wiznet","w55rp20","w232n datasheet","hardwired tcp/ip","serial-to-ethernet","w5500","rp2040"]},d="W55RP20 Serial to Ethernet Official Design Guide",l={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Pinout Description",id:"pinout-description",level:2},{value:"Setting Pin",id:"setting-pin",level:3},{value:"Data Pin",id:"data-pin",level:3},{value:"LED Indicators - Status",id:"led-indicators---status",level:3},{value:"Firmware Upload",id:"firmware-upload",level:2},{value:"MAC Address Setup",id:"mac-address-setup",level:2},{value:"Configuration",id:"configuration",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"w55rp20-serial-to-ethernet-official-design-guide",children:"W55RP20 Serial to Ethernet Official Design Guide"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"The W55RP20 combines WIZnet\u2019s W5500 Ethernet controller and Raspberry Pi\u2019s RP2040 MCU, designed specifically for Serial-to-Ethernet applications supporting UART TTL, RS-232, RS-422, and RS-485 communication."}),"\n",(0,r.jsx)(n.h2,{id:"pinout-description",children:"Pinout Description"}),"\n",(0,r.jsx)(n.h3,{id:"setting-pin",children:"Setting Pin"}),"\n",(0,r.jsx)(n.p,{children:"| Pin      |Pinout|Name| Description                                  |\n|--------------|------||----------------------------------------------|\n| RST          |29|RUN| MCU Reset (Active Low)                        |\n| BOOT Mode    |21|GP15| Firmware boot mode control                    |\n| AT Mode      |20|GP14| Enter AT command mode (Active Low)            |\n| RP BOOT      |63|BOOT| Flash reset & RP2040 boot (Active Low)        |\n| 232/485 Select|18|GP12| Low: TTL/RS-232, High: RS-422/485            |\n| Factory RST  | 40|GP18|Reset IP settings (Firmware retained)         |"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"RST PinThis pin is used for MCU reset and operates in an Active Low state."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"BOOT Mode PinDesigned to control the boot mode of the Serial to Ethernet internal firmware."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"AT Mode PinOperates as Active Low; controlling this pin allows entry into AT command mode via serial for chip control."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"RP BOOT PinThe reset pin for internal flash memory, operating as Active Low, following the RP2040 boot sequence."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"232/485 Select PinDetermines the communication method based on its state at initial chip operation."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Low: Sets UART or RS-232 mode"}),"\n",(0,r.jsx)(n.li,{children:"High: Sets RS-422 or RS-485 mode"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Factory RST PinResets the IP settings to factory defaults while keeping the firmware unchanged."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"data-pin",children:"Data Pin"}),"\n",(0,r.jsx)(n.p,{children:"| Pin      |Pinout|Name| Description                                  |\n|--------------|------||----------------------------------------------|\n| UART_TX       |9|GP4| UART data transmission.                  |\n| UART_RX       |10|GP5| UART data reception.                    |\n| UART_RTS      |12|GP7| UART request to send (flow control)     |\n| UART_CTS      |11|GP6| UART clear to send (flow control)       |\n| UART_DTR      |14|GP8| UART data terminal ready (flow control) |\n| UART_DSR      |15|GP9| UART data set ready (flow control)      |"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"UART_RTS Pin: UART request to send (flow control); determines communication mode (floating for RS-485, Low for RS-422)"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"led-indicators---status",children:"LED Indicators - Status"}),"\n",(0,r.jsx)(n.p,{children:"| Pin      |Pinout|Name| Description                                  |\n|--------------|------||-------------------------------------------|\n| RUN            |19|GP19| MCU status LED, blinks when the MCU is operating normally.                 |\n| PHY LINK       |16|GP10| Indicates PHY link status                    |\n| TCP Conectoin  |17|GP11| Indicates active TCP connection     |"}),"\n",(0,r.jsx)(n.h2,{id:"firmware-upload",children:"Firmware Upload"}),"\n",(0,r.jsx)(n.p,{children:"Three firmware upload methods:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"USB (UF2)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Set RP-BOOT pin Low and reset; drag ",(0,r.jsx)(n.code,{children:"Boot.uf2"})," and then ",(0,r.jsx)(n.code,{children:"app.uf2"})," into \u2018RPI-RP2\u2019 drive."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"SWD (J-Link)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Upload HEX/BIN files using J-Link, same as standard RP2040."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ethernet (BIN)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use WIZnet Configuration Tool for application updates only (not initial upload)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"mac-address-setup",children:"MAC Address Setup"}),"\n",(0,r.jsx)(n.p,{children:"Initial firmware upload via USB/SWD required. MAC setup essential via WIZnet MAC Tool (115200 baud). MAC address must be purchased separately."}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Advanced settings and further configurations available using the latest WIZnet Configuration Tool."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var t=i(96540);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);