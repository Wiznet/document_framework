"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[98805],{41099:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var i=r(85893),t=r(11151);const l={id:"timerrun",title:"Dual Timer TimerRun example",date:new Date("2020-04-03T00:00:00.000Z")},s=void 0,o={id:"Product/iMCU/W7500/Peripherals-internal/timerrun",title:"Dual Timer TimerRun example",description:"(C) COPYRIGHT 2015 WIZnet Co.,Ltd.",source:"@site/docs/Product/iMCU/W7500/Peripherals-internal/timerrun.md",sourceDirName:"Product/iMCU/W7500/Peripherals-internal",slug:"/Product/iMCU/W7500/Peripherals-internal/timerrun",permalink:"/Product/iMCU/W7500/Peripherals-internal/timerrun",draft:!1,unlisted:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/Peripherals-internal/timerrun.md",tags:[],version:"current",frontMatter:{id:"timerrun",title:"Dual Timer TimerRun example",date:"2020-04-03T00:00:00.000Z"},sidebar:"docs",previous:{title:"PWM Timer Mode example",permalink:"/Product/iMCU/W7500/Peripherals-internal/timermode"},next:{title:"TCP/IP core Offload Engine (TOE)",permalink:"/Product/iMCU/W7500/Peripherals-internal/toe"}},a={},d=[{value:"Example Description",id:"example-description",level:3},{value:"Directory contents",id:"directory-contents",level:3},{value:"Hardware and Software environment",id:"hardware-and-software-environment",level:3},{value:"How to use it ?",id:"how-to-use-it-",level:3}];function c(e){const n={a:"a",h3:"h3",hr:"hr",li:"li",p:"p",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"(C) COPYRIGHT 2015 WIZnet Co.,Ltd."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"file    : DualTimer/TimerRun/readme.md"}),"\n",(0,i.jsx)(n.li,{children:"author  : IOP Team"}),"\n",(0,i.jsx)(n.li,{children:"version : V1.0.0"}),"\n",(0,i.jsx)(n.li,{children:"date    : 01-May-2015"}),"\n",(0,i.jsx)(n.li,{children:"brief   : Description of the Dual timer TimerRun example."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\nWITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\nTIME. AS A RESULT, WIZnet SHALL NOT BE HELD LIABLE FOR ANY\nDIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\nFROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\nCODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-description",children:"Example Description"}),"\n",(0,i.jsx)(n.p,{children:"This example shows how to use the Dual timer peripheral to run. Only dual timer 0-0 is working in this example."}),"\n",(0,i.jsx)(n.p,{children:"The Dual timer 0-0 frequency is set to SystemCoreClock(Hz), and the clock is divided by 16.\nSystemCoreClock is set to 20 MHz."}),"\n",(0,i.jsx)(n.p,{children:"The dual timer is configured in wrapping mode and periodic mode. The counter size is 32-bit.\nThe interrupt is enabled."}),"\n",(0,i.jsx)(n.p,{children:"When the Counter reaches 0, the interrupt is occurred and RED LED(PC.08) is toggled every times."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"directory-contents",children:"Directory contents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"DualTimer/TimerRun/main.c                  (Main program)"}),"\n",(0,i.jsx)(n.li,{children:"DualTimer/TimerRun/W7500x_it.c             (Interrupt Handlers)"}),"\n",(0,i.jsx)(n.li,{children:"DualTimer/TimerRun/W7500x_it.h             (Interrupt Handlers Header file)"}),"\n",(0,i.jsx)(n.li,{children:"DualTimer/TimerRun/W7500x_conf.h           (Library Configuration file)"}),"\n",(0,i.jsx)(n.li,{children:"DualTimer/TimerRun/MDK/W7500x_Dualtimer_TimerRun.uvproj     (MDK Project file)"}),"\n",(0,i.jsx)(n.li,{children:"DualTimer/TimerRun/GCC/Makefile            (GCC Make file)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"hardware-and-software-environment",children:"Hardware and Software environment"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"This example has been tested with WIZnet WIZwiki W7500 platform."}),"\n",(0,i.jsx)(n.li,{children:"To select the WIZnet WIZwiki platform used to run the example."}),"\n",(0,i.jsxs)(n.li,{children:["WIZwiki W7500 Set-up","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use RED LED connected to PC_08 pin."}),"\n",(0,i.jsx)(n.li,{children:"In order to use the RED LED(PC_08) to be changed from PAD_AF0 to PAD_AF1."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-to-use-it-",children:"How to use it ?"}),"\n",(0,i.jsx)(n.p,{children:"In order to make the program work, you must do the following :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Open your preferred toolchain."}),"\n",(0,i.jsx)(n.li,{children:"Rebuild all files and load your image into target memory."}),"\n",(0,i.jsx)(n.li,{children:"Run the example."}),"\n",(0,i.jsx)(n.li,{children:"WIZwiki W7500 where the Flash memory density ranges 128Kbytes."}),"\n",(0,i.jsxs)(n.li,{children:["If you have any questions, please use the forum site.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:['"',(0,i.jsx)(n.a,{href:"https://maker.wiznet.io/forum/",children:"https://maker.wiznet.io/forum/"}),'"']}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\xa9 COPYRIGHT 2015 WIZnet Co.,Ltd."})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>s});var i=r(67294);const t={},l=i.createContext(t);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);