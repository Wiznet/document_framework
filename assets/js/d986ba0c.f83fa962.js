"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[34892],{44948:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var t=r(85893),i=r(11151);const l={id:"exti",title:"External Interrupt (EXTI)",date:new Date("2020-06-10T00:00:00.000Z")},a=void 0,s={id:"Product/iMCU/W7500/Peripherals-internal/exti",title:"External Interrupt (EXTI)",description:"Introduction",source:"@site/docs/Product/iMCU/W7500/Peripherals-internal/exti.md",sourceDirName:"Product/iMCU/W7500/Peripherals-internal",slug:"/Product/iMCU/W7500/Peripherals-internal/exti",permalink:"/Product/iMCU/W7500/Peripherals-internal/exti",draft:!1,unlisted:!1,editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/Peripherals-internal/exti.md",tags:[],version:"current",frontMatter:{id:"exti",title:"External Interrupt (EXTI)",date:"2020-06-10T00:00:00.000Z"},sidebar:"docs",previous:{title:"DNS Client for TCP/IP Offload Engine example",permalink:"/Product/iMCU/W7500/Peripherals-internal/dmdnsclient"},next:{title:"Embedded Flash memory",permalink:"/Product/iMCU/W7500/Peripherals-internal/flash"}},o={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Features",id:"features",level:2},{value:"Functional description",id:"functional-description",level:2},{value:"Peripheral_Examples",id:"peripheral_examples",level:2}];function c(e){const n={a:"a",br:"br",h2:"h2",hr:"hr",img:"img",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"Each functional pads are connected to the external interrupt(EXTINT) source."}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All functional pads can be used as an external interrupt source regardless of any set of pad function."}),"\n",(0,t.jsx)(n.li,{children:"External Interrupt controller has the following functions and can be controlled by registers."}),"\n",(0,t.jsx)(n.li,{children:"Interrupt mask (enable or disable, default : disable)"}),"\n",(0,t.jsx)(n.li,{children:"Interrupt polarity (rising or falling, default : rising)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"functional-description",children:"Functional description"}),"\n",(0,t.jsxs)(n.p,{children:["All pads are connected to the control register individually. (External interrupt mask register and External Interrupt polarity register)",(0,t.jsx)(n.br,{}),"\n","External interrupt working as following expression:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Each pad interrupt = Interrupt mask & (Interrupt polarity ^ Pad input)"}),"\n",(0,t.jsx)(n.li,{children:"EXTINT = any Each pad interrupt"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:r(38014).Z+"",title:"Figure1 External Interrupt diagram",width:"954",height:"1219"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"peripheral_examples",children:"Peripheral_Examples"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/Product/iMCU/W7500/Peripherals-internal/led-toggle",children:"EXTI LED-Toggle example"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/Product/iMCU/W7500/Peripherals-internal/sleep",children:"EXTI Sleep example"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},38014:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/external_interrupt_diagram-a01994956a013446fc4ee1bea6e9359b.jpg"},11151:(e,n,r)=>{r.d(n,{Z:()=>s,a:()=>a});var t=r(67294);const i={},l=t.createContext(i);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);