"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[16148],{85227:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Product/Open-Source-Hardware/open_source_hardware_coocox","title":"CooCox","description":"Visit to the Web site","source":"@site/docs/Product/Open-Source-Hardware/CooCox.md","sourceDirName":"Product/Open-Source-Hardware","slug":"/Product/Open-Source-Hardware/open_source_hardware_coocox","permalink":"/Product/Open-Source-Hardware/open_source_hardware_coocox","draft":false,"unlisted":false,"editUrl":"https://github.com/Wiznet/document_framework/tree/master/docs/Product/Open-Source-Hardware/CooCox.md","tags":[],"version":"current","frontMatter":{"id":"open_source_hardware_coocox","title":"CooCox","date":"2020-04-03T00:00:00.000Z"}}');var t=o(74848),i=o(28453);const s={id:"open_source_hardware_coocox",title:"CooCox",date:new Date("2020-04-03T00:00:00.000Z")},c="CooCox",a={},l=[{value:"Installation",id:"installation",level:2},{value:"CooCox Open IDE",id:"coocox-open-ide",level:2},{value:"Tool-chains setting in CoIDE",id:"tool-chains-setting-in-coide",level:2},{value:"CoX-Peripheral Interface",id:"cox-peripheral-interface",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"coocox",children:"CooCox"})}),"\n",(0,t.jsx)(n.p,{children:"Visit to the Web site"}),"\n",(0,t.jsxs)(n.p,{children:["URL :\ud83c\udf0e",(0,t.jsx)(n.a,{href:"http://www.coocox.org/Index.html",children:"http://www.coocox.org/Index.html"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"CoIDE just provides development environment without\ntool-chains. So you need to install tool-chains at first. We use ARM gcc\n4.7 for tool-chains."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"ARM GCC 4.7 Features:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All GCC 4.7 features, plus latest mainline features - Additional code\nsize optimizations - Newlib-nano: newlib branch optimized for code size"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://launchpad.net/gcc-arm-embedded/+download",children:"Download the latest arm-gcc-embbed"})}),"\n",(0,t.jsx)(n.h2,{id:"coocox-open-ide",children:"CooCox Open IDE"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"CooCox"})," provides integration development environment\ncalled ",(0,t.jsx)(n.strong,{children:"CoIDE"})," for ARM Cortex M series microcontrollers. ",(0,t.jsx)(n.strong,{children:"CoIDE"}),"\nsupports ARM gcc based development environment of ",(0,t.jsx)(n.strong,{children:"eclipse"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"System requirements:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Windows XP SP3 / Windows Vista / Windows 7"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Features:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Free to use - Full functional IDE - Component-oriented development\nplatform - Internet-based, efficient integration of network resources -\nIntegrates CoOS - Peripheral registers"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://www.coocox.org/CooCox_CoIDE.htm",children:"CoIDE Download and learn more"})}),"\n",(0,t.jsx)(n.h2,{id:"tool-chains-setting-in-coide",children:"Tool-chains setting in CoIDE"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"Before you use CoIDE to start your project, you need to\nconfig the GCC compiler at first."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://www.coocox.org/CoIDE/Compiler_Settings.html",children:"Compiler Setting in CoIDE"})}),"\n",(0,t.jsx)(n.h2,{id:"cox-peripheral-interface",children:"CoX-Peripheral Interface"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Cox-Peripheral interface"})," is Common Wrapper Interface to\nport peripheral easily which is different in each vendors. If SPI is\ndesigned by Cox-Peripheral Interface starting as x(e.g. xGPIOModeSet),\nyou can operate by changing just SPI interface PIN setting in each MCUs\nor EVB-boards."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://www.coocox.org/COX.html",children:"Learn more"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var r=o(96540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);