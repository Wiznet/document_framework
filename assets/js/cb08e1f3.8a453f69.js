"use strict";(self.webpackChunkwiznet_document=self.webpackChunkwiznet_document||[]).push([[57271],{94395:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>s,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en","title":"HW design guide","description":"Introduction","source":"@site/docs/Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en.md","sourceDirName":"Product/ioNIC/W55RP20/W55RP20-S2E","slug":"/Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en","permalink":"/Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en","draft":false,"unlisted":false,"editUrl":"https://github.com/Wiznet/document_framework/tree/master/docs/Product/ioNIC/W55RP20/W55RP20-S2E/hw-design-guide-en.md","tags":[],"version":"current","frontMatter":{"id":"hw-design-guide-en","title":"HW design guide","date":"2024-10-04T00:00:00.000Z","keywords":["wiznet","w55rp20","w232n datasheet","hardwired tcp/ip","serial-to-ethernet","w5500","rp2040"]},"sidebar":"docs","previous":{"title":"Getting Started with W55RP20-EVB-PICO","permalink":"/Product/ioNIC/W55RP20/W55RP20-S2E/w55rp20-evb-pico-s2e"},"next":{"title":"Config tool Guide","permalink":"/Product/ioNIC/W55RP20/W55RP20-S2E/Config-tool-Guide-en"}}');var d=i(74848),r=i(28453);const s={id:"hw-design-guide-en",title:"HW design guide",date:new Date("2024-10-04T00:00:00.000Z"),keywords:["wiznet","w55rp20","w232n datasheet","hardwired tcp/ip","serial-to-ethernet","w5500","rp2040"]},l="W55RP20 Serial to Ethernet Official Design Guide",c={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Pinout Description",id:"pinout-description",level:2},{value:"Setting Pin",id:"setting-pin",level:3},{value:"Data Pin",id:"data-pin",level:3},{value:"LED Indicators - Status",id:"led-indicators---status",level:3},{value:"Firmware Upload",id:"firmware-upload",level:2},{value:"MAC Address Setup",id:"mac-address-setup",level:2},{value:"Configuration",id:"configuration",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"w55rp20-serial-to-ethernet-official-design-guide",children:"W55RP20 Serial to Ethernet Official Design Guide"})}),"\n",(0,d.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,d.jsx)(n.p,{children:"The W55RP20 combines WIZnet\u2019s W5500 Ethernet controller and Raspberry Pi\u2019s RP2040 MCU, designed specifically for Serial-to-Ethernet applications supporting UART TTL, RS-232, RS-422, and RS-485 communication."}),"\n",(0,d.jsx)(n.h2,{id:"pinout-description",children:"Pinout Description"}),"\n",(0,d.jsx)(n.h3,{id:"setting-pin",children:"Setting Pin"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Pin"}),(0,d.jsx)(n.th,{children:"Pinout"}),(0,d.jsx)(n.th,{children:"Name"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"RST"}),(0,d.jsx)(n.td,{children:"29"}),(0,d.jsx)(n.td,{children:"RUN"}),(0,d.jsx)(n.td,{children:"MCU Reset (Active Low)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"BOOT Mode"}),(0,d.jsx)(n.td,{children:"21"}),(0,d.jsx)(n.td,{children:"GP15"}),(0,d.jsx)(n.td,{children:"Firmware boot mode control"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"AT Mode"}),(0,d.jsx)(n.td,{children:"20"}),(0,d.jsx)(n.td,{children:"GP14"}),(0,d.jsx)(n.td,{children:"Enter AT command mode (Active Low)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"RP BOOT"}),(0,d.jsx)(n.td,{children:"63"}),(0,d.jsx)(n.td,{children:"BOOT"}),(0,d.jsx)(n.td,{children:"Flash reset & RP2040 boot (Active Low)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"232/485 Select"}),(0,d.jsx)(n.td,{children:"18"}),(0,d.jsx)(n.td,{children:"GP12"}),(0,d.jsx)(n.td,{children:"Low: TTL/RS-232, High: RS-422/485"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Factory RST"}),(0,d.jsx)(n.td,{children:"40"}),(0,d.jsx)(n.td,{children:"GP18"}),(0,d.jsx)(n.td,{children:"Reset IP settings (Firmware retained)"})]})]})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"RST Pin : This pin is used for MCU reset and operates in an Active Low state."}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"BOOT Mode : PinDesigned to control the boot mode of the Serial to Ethernet internal firmware."}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"AT Mode Pin : Operates as Active Low; controlling this pin allows entry into AT command mode via serial for chip control."}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"RP BOOT Pin : The reset pin for internal flash memory, operating as Active Low, following the RP2040 boot sequence."}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"232/485 Select Pin : Determines the communication method based on its state at initial chip operation."}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Low: Sets UART or RS-232 mode"}),"\n",(0,d.jsx)(n.li,{children:"High: Sets RS-422 or RS-485 mode"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"Factory RST Pin : Resets the IP settings to factory defaults while keeping the firmware unchanged."}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"data-pin",children:"Data Pin"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"The selection between SPI mode and UART mode can be determined at boot by reading the state of the UART_SPI_SEL pin."})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Pin"}),(0,d.jsx)(n.th,{children:"Pinout"}),(0,d.jsx)(n.th,{children:"Name"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"UART_SPI_SEL"}),(0,d.jsx)(n.td,{children:"19"}),(0,d.jsx)(n.td,{children:"GP13"}),(0,d.jsxs)(n.td,{children:["UART/SPI interface select pin",(0,d.jsx)("br",{}),"High",":SPI",", Low/NC",":UART"]})]})})]}),"\n",(0,d.jsx)(n.p,{children:"UART mode"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Pin"}),(0,d.jsx)(n.th,{children:"Pinout"}),(0,d.jsx)(n.th,{children:"Name"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"UART_TX"}),(0,d.jsx)(n.td,{children:"9"}),(0,d.jsx)(n.td,{children:"GP4"}),(0,d.jsx)(n.td,{children:"UART data transmission."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"UART_RX"}),(0,d.jsx)(n.td,{children:"10"}),(0,d.jsx)(n.td,{children:"GP5"}),(0,d.jsx)(n.td,{children:"UART data reception."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"UART_RTS"}),(0,d.jsx)(n.td,{children:"12"}),(0,d.jsx)(n.td,{children:"GP7"}),(0,d.jsx)(n.td,{children:"UART request to send (flow control)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"UART_CTS"}),(0,d.jsx)(n.td,{children:"11"}),(0,d.jsx)(n.td,{children:"GP6"}),(0,d.jsx)(n.td,{children:"UART clear to send (flow control)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"UART_DTR"}),(0,d.jsx)(n.td,{children:"14"}),(0,d.jsx)(n.td,{children:"GP8"}),(0,d.jsx)(n.td,{children:"UART data terminal ready (flow control)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"UART_DSR"}),(0,d.jsx)(n.td,{children:"15"}),(0,d.jsx)(n.td,{children:"GP9"}),(0,d.jsx)(n.td,{children:"UART data set ready (flow control)"})]})]})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.strong,{children:"UART_RTS Pin: UART request to send (flow control); determines communication mode (floating for RS-485, Low for RS-422)"})}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"SPI mode"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Pin"}),(0,d.jsx)(n.th,{children:"Pinout"}),(0,d.jsx)(n.th,{children:"Name"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"SPI_SCK"}),(0,d.jsx)(n.td,{children:"67"}),(0,d.jsx)(n.td,{children:"GP2"}),(0,d.jsx)(n.td,{children:"SCK input pin for Data SPI transmission"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"SPI_MISO"}),(0,d.jsx)(n.td,{children:"68"}),(0,d.jsx)(n.td,{children:"GP3"}),(0,d.jsx)(n.td,{children:"MISO pin for Data SPI reception"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"SPI_MOSI"}),(0,d.jsx)(n.td,{children:"9"}),(0,d.jsx)(n.td,{children:"GP4"}),(0,d.jsx)(n.td,{children:"MOSI pin for Data SPI transmission"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"SPI_CSn"}),(0,d.jsx)(n.td,{children:"10"}),(0,d.jsx)(n.td,{children:"GP5"}),(0,d.jsx)(n.td,{children:"SPI Chip Select pin"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"SPI_INT"}),(0,d.jsx)(n.td,{children:"46"}),(0,d.jsx)(n.td,{children:"GP26"}),(0,d.jsx)(n.td,{children:"SPI Master Recv data pending pin"})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"led-indicators---status",children:"LED Indicators - Status"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Pin"}),(0,d.jsx)(n.th,{children:"Pinout"}),(0,d.jsx)(n.th,{children:"Name"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"RUN"}),(0,d.jsx)(n.td,{children:"41"}),(0,d.jsx)(n.td,{children:"GP19"}),(0,d.jsx)(n.td,{children:"MCU status LED, blinks when the MCU is operating normally."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"PHY LINK"}),(0,d.jsx)(n.td,{children:"16"}),(0,d.jsx)(n.td,{children:"GP10"}),(0,d.jsx)(n.td,{children:"Indicates PHY link status"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"TCP Conectoin"}),(0,d.jsx)(n.td,{children:"17"}),(0,d.jsx)(n.td,{children:"GP11"}),(0,d.jsx)(n.td,{children:"Indicates active TCP connection"})]})]})]}),"\n",(0,d.jsx)(n.h2,{id:"firmware-upload",children:"Firmware Upload"}),"\n",(0,d.jsx)(n.p,{children:"Three firmware upload methods:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"USB (UF2)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Set RP-BOOT pin Low and reset; drag ",(0,d.jsx)(n.code,{children:"Boot.uf2"})," and then ",(0,d.jsx)(n.code,{children:"app.uf2"})," into \u2018RPI-RP2\u2019 drive."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"SWD (J-Link)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Upload HEX/BIN files using J-Link, same as standard RP2040."}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Ethernet (BIN)"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Use WIZnet Configuration Tool for application updates only (not initial upload)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"mac-address-setup",children:"MAC Address Setup"}),"\n",(0,d.jsx)(n.p,{children:"Initial firmware upload via USB/SWD required. MAC setup essential via WIZnet MAC Tool (115200 baud). MAC address must be purchased separately."}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"https://docs.wiznet.io/img/products/wiz750sr/developers/restore-mac/wizmactool_v20151127.zip",children:"download  - WIZMacTool"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/Product/ioNIC/W55RP20/W55RP20-S2E/mac_address-write-guide-en#using-wizmactool",children:"How to use WIZMacTool"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/Product/ioNIC/W55RP20/W55RP20-S2E/mac_address-write-guide-en#using-serial-command",children:"Using Serial Command"})}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,d.jsx)(n.p,{children:"Advanced settings and further configurations available using the latest WIZnet Configuration Tool."}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/Product/ioNIC/W55RP20/W55RP20-S2E/Config-tool-Guide-en",children:"Configuration Guide"})}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(96540);const d={},r=t.createContext(d);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);